<?phpfunction MYFAQ_register_session() {    if (!session_id())        session_start();}add_action('init', 'MYFAQ_register_session',-999);function MYFAQ_Gecho($str, $echo = true){    if ($echo) {        _e($str, MYFAQ_TEXT_DOMAIN);    } else {        return __($str, MYFAQ_TEXT_DOMAIN);    }}/** * Load Plugin Style And script that are need in admin panel */function MYFAQ_admin_styles_scripts($hook){    /* Register Scripts */    if ($hook == 'edit.php') {        /* Register Scripts */        wp_register_script(MYFAQ_TEXT_DOMAIN . 'admin_JS', MYFAQ_JS_PATH . 'admin.min.js', array('jquery'), 1.0, false);        /* Styles */        wp_register_style(MYFAQ_TEXT_DOMAIN . 'admin_CSS', MYFAQ_CSS_PATH . 'admin.min.css', array(), 1.0, 'all');        /* Load */        wp_enqueue_script(MYFAQ_TEXT_DOMAIN . 'admin_JS');        wp_enqueue_style(MYFAQ_TEXT_DOMAIN . 'admin_CSS');    }}/** * Load Plugin Style And script that are need in front area */function MYFAQ_user_styles_scripts(){    if (is_single() || is_page()) {        wp_register_script(MYFAQ_TEXT_DOMAIN . 'user_JS', MYFAQ_JS_PATH . 'user.min.js', array('jquery'), 1.0, false);        wp_register_style(MYFAQ_TEXT_DOMAIN . 'user_CSS', MYFAQ_CSS_PATH . 'user.min.css', array(), 1.0, 'all');        wp_enqueue_script(MYFAQ_TEXT_DOMAIN . 'user_JS');        wp_enqueue_style(MYFAQ_TEXT_DOMAIN . 'user_CSS');    }}add_action('admin_enqueue_scripts', 'MYFAQ_admin_styles_scripts');add_action('wp_enqueue_scripts', 'MYFAQ_user_styles_scripts');/** * do somthing like load language files */function MYFAQ_plugin_setup(){    load_plugin_textdomain(MYFAQ_TEXT_DOMAIN, false, dirname(plugin_basename(dirname(__FILE__))) . DIRECTORY_SEPARATOR . 'LANG' . DIRECTORY_SEPARATOR);}add_action('init', 'MYFAQ_plugin_setup');/** * Register MY_FAQ post type */function MYFAQ_post_type(){    if ( !post_type_exists( 'my_faq' ) ) {        $labels = array('name' => MYFAQ_Gecho('MY FAQ', false), 'singular_name' => MYFAQ_Gecho('MY FAQ', false), 'add_new' => MYFAQ_Gecho('Add New', false), 'add_new_item' => MYFAQ_Gecho('Add New FAQ', false), 'edit_item' => MYFAQ_Gecho('Edit FAQ', false), 'new_item' => MYFAQ_Gecho('New FAQ Items', false), 'all_items' => MYFAQ_Gecho('All FAQ\'s', false), 'view_item' => MYFAQ_Gecho('View FAQ', false), 'search_items' => MYFAQ_Gecho('Search FAQ', false), 'not_found' => MYFAQ_Gecho('No FAQ Items found', false), 'not_found_in_trash' => MYFAQ_Gecho('No FAQ Items found in the Trash', false), 'parent_item_colon' => '', 'menu_name' => MYFAQ_Gecho('MY FAQ', false));        $args = array('labels' => $labels, 'description' => 'Holds FAQ specific data', 'public' => true, 'show_ui' => true, 'show_in_menu' => true, 'query_var' => true, 'rewrite' => true, 'capability_type' => 'post', 'has_archive' => true, 'hierarchical' => false, 'menu_position' => 5, 'supports' => array('title', 'editor'), 'menu_icon' => MYFAQ_PATH . 'CONTENTS/IMG/myfaq-icon-png.png', /* Icon Path */        );        register_post_type('my_faq', $args);        /* Add new taxonomy, make it hierarchical (like categories) */        $labels = array('name' => MYFAQ_Gecho('FAQ Categories', false), 'singular_name' => MYFAQ_Gecho('FAQ Category', false), 'search_items' => MYFAQ_Gecho('Search FAQ Categories', false), 'all_items' => MYFAQ_Gecho('All FAQ Category', false), 'parent_item' => MYFAQ_Gecho('Parent FAQ Category', false), 'parent_item_colon' => MYFAQ_Gecho('Parent FAQ Category:', false), 'edit_item' => MYFAQ_Gecho('Edit FAQ Category', false), 'update_item' => MYFAQ_Gecho('Update FAQ Category', false), 'add_new_item' => MYFAQ_Gecho('Add New FAQ Category', false), 'new_item_name' => MYFAQ_Gecho('New FAQ Category Name', false), 'menu_name' => MYFAQ_Gecho('FAQ Category', false),);        register_taxonomy('g_MYFAQ_cat', array('my_faq'), array('hierarchical' => true, 'labels' => $labels, 'show_ui' => true, 'query_var' => true, 'rewrite' => array('slug' => 'g_MYFAQ_cat'),));        flush_rewrite_rules();    }}add_action('init', 'MYFAQ_post_type');/** * Add G_FAQ shortcode * @return string output html */function g_MYFAQ_shortcode(){    /* Registering the scripts and style */    global $MYFAQ_admin_options;    if(isset($MYFAQ_admin_options['g_myfaq-enable'])){        if (@$MYFAQ_admin_options['g_myfaq-enable'] != 1 && $MYFAQ_admin_options['g_myfaq-enable'] !== NULL) {            return MYFAQ_Gecho('<p class="myfaq-error">FAQ Disabled!</p>', false);        }    }    $paged = (get_query_var('paged')) ? get_query_var('paged') : 1;    $args = array('posts_per_page' => isset($MYFAQ_admin_options['g_faq-per-page']) ? $MYFAQ_admin_options['g_faq-per-page'] : 5, 'post_type' => 'my_faq', 'order' => "DESC", 'paged' => $paged);    $query = new WP_Query($args);    global $faq , $wpdb;    $class = '';    if(!is_rtl()){        $class = 'ltr';    }    $html = '<div id="my_faq" class="'.$class.'">';    $html .= '<h2>' . MYFAQ_Gecho(':: FAQ List ::', false) . '</h2>';    $html .= '<hr class="faq-sep" />';    /*if(trim($myfaq_error) != ''){        $html 	.=	'<div class="myfaq-error myfaq-error2">'.$myfaq_error.'<span class="myfaq-close-btn">Ã—</span></div>';    }*/    /* require captcha file */    require_once MYFAQ_PHP_DIR . 'simple-php-captcha.php';    // if (@!$_SESSION) session_start();    $_SESSION['captcha'] = simple_php_captcha(array(        'min_length' => 5,        'max_length' => 7,        'backgrounds' => array('white-wave.png'),        'fonts' => array('times_new_yorker.ttf'),        'characters' => 'abcdefghjkmnprstuvwxyz23456789',        'min_font_size' => 15,        'max_font_size' => 15,        'color' => '#bbb',        'angle_min' => 0,        'angle_max' => 10,        'shadow' => true,        'shadow_color' => '#fff',        'shadow_offset_x' => -1,        'shadow_offset_y' => 1    ));    /* get awaiting faqs */    $query_pending = "SELECT COUNT(*) FROM ".$wpdb->posts." WHERE post_status = 'pending' AND post_type='my_faq'";    $awaiting_faqs = $wpdb->get_var($query_pending);    $html .=        '<div id="myfaq-ask-question">            <button class="myfaq-submit-button" id="myfaq-ask-question-btn">' . MYFAQ_Gecho('To Ask Question Click Here!', false) . '</button>            <span class="awaiting-mod"><span class="pending-count">'.$awaiting_faqs.'</span></span>		<form action="' . $_SERVER['REQUEST_URI'] . '#my_faq" method="post" id="myfaq-ask-question-form">			<label for="myfaq-question-title">' . MYFAQ_Gecho('Title', false) . ':<input type="text" name="myfaq-question-title"  id="myfaq-question-title" placeholder="' . MYFAQ_Gecho('Question title here...!', false) . '" /></label>			<label for="myfaq-question-text">' . MYFAQ_Gecho('Question', false) . ':<textarea name="myfaq-question-text" id="myfaq-question-text" cols="30" rows="10" placeholder="' . MYFAQ_Gecho('Write your question here...!', false) . '"></textarea></label>';                        if($MYFAQ_admin_options['g_myfaq-enable-captcha'] == 1){                $html .= '		      	<label for="myfaq-question-captcha">' . MYFAQ_Gecho('Captcha', false) . ':<input name="myfaq-question-captcha" id="myfaq-question-captcha" type="text" autocomplete="off" /><img src="' . $_SESSION['captcha']['image_src'] . '" id="myfaq-question-captcha-img" name="myfaq-question-captcha-img" /></label>';            }            $html .='			<h3>::: ' . MYFAQ_Gecho('Optional Fields,Fill for question alerts about your questions ', false) . ' :::</h3>			<label for="myfaq-question-email">' . MYFAQ_Gecho('Email', false) . ':<input type="text" name="myfaq-question-email"  id="myfaq-question-email" placeholder="' . MYFAQ_Gecho('Enter your email...!', false) . '" /></label>			<label for="myfaq-question-mobile">' . MYFAQ_Gecho('Mobile', false) . ':<input type="text" name="myfaq-question-mobile"  id="myfaq-question-mobile" placeholder="' . MYFAQ_Gecho('Enter Your mobile...!', false) . '" /></label>            <input type="submit" value="' . MYFAQ_Gecho('Ask', false) . '" class="myfaq-submit-button" id="myfaq-submit-button-id" />			<img src="'.MYFAQ_IMG_PATH.'ajax-loader.gif" id="myfaq-question-ajax-loader" />		</form>	</div>';    if ($query->have_posts()) {        while ($query->have_posts()) {            $query->the_post();            $terms = wp_get_post_terms(get_the_ID(), 'g_MYFAQ_cat');            $t = array();            foreach ($terms as $term)                $t[] = $term->name;            echo implode(' ', $t);            $t = array();            $html .= '<div class="g_MYFAQ_post">';            $html .= '<h3>' . get_the_title() . '</h3>';            $html .= '<div>' . apply_filters('the_content',get_the_content()) . '<span class="faq-comments"><a href="' . get_comment_link() . '">' . MYFAQ_Gecho('Comments', false) . '</a></span></div>';            if (current_user_can('manage_options')) {                $html .= '<a class="edit-this-faq" href="' . get_edit_post_link() . '">' . MYFAQ_Gecho('::Edit', false) . '</a>';            }            $html .= '</div>';        } /* end while */    } /* endif */    else {        $html .= MYFAQ_Gecho('<p class="myfaq-error">There is no FAQ yet.</p>', false);    }    $big = 999999999;    /* need an unlikely integer */    $html .= '<div class="g_MYFAQ_pagination">' . paginate_links(array('base' => str_replace($big, '%#%', esc_url(get_pagenum_link($big))), 'format' => '?paged=%#%', 'current' => max(1, get_query_var('paged')), 'total' => $query->max_num_pages)) . '</div>';    $html .= '</div>';    /* Reset the query */    wp_reset_query();    wp_reset_postdata();    return $html;}add_shortcode('my_faq', 'g_MYFAQ_shortcode');/**/add_action('admin_menu', 'register_myfaq_submenu_page');function register_myfaq_submenu_page(){    add_submenu_page('edit.php?post_type=my_faq', MYFAQ_Gecho('settings', false), MYFAQ_Gecho('settings', false), 'manage_options', 'myfaq_admin_page_fn', 'myfaq_admin_page_fn');    add_submenu_page('edit.php?post_type=my_faq', MYFAQ_Gecho('Help', false), MYFAQ_Gecho('help', false), 'manage_options', 'myfaq_admin_page_help_fn', 'myfaq_admin_page_help_fn');}function myfaq_admin_page_fn(){    echo '<div class="wrap">';    /**     * validate and save options     */    global $MYFAQ_admin_options, $category_ids;    $category_ids = get_all_category_ids();    if (isset($_POST['site_options_save'])) {        /*check if its first run! */        if (false === get_option(MYFAQ_TEXT_DOMAIN . '_options')) {            add_option(MYFAQ_TEXT_DOMAIN . '_options');        }        $options = array();        foreach ($_POST as $key => $val) {            /* check for g_* options only */            if ($key[0] == 'g' && $key[1] == '_') {                $options    [$key] = $val;            }        }        if (update_option(MYFAQ_TEXT_DOMAIN . '_options', $options)) {            echo '<script>alert("' . MYFAQ_Gecho('Settings are saved successfully', false) . '");</script>';        }    }    $MYFAQ_admin_options = @array_map('stripslashes', get_option(MYFAQ_TEXT_DOMAIN . '_options',array('g_myfaq-enable-captcha'=>0,'g_myfaq-enable'=>1)));    ?>    <form action="" method="post">        <div class="wrap" id="G-admin-menu-them">            <div id="G-in-admin-left">                <ul id="G-in-admin-left-ul">                    <?php                    $admin_menus = array(                        array('Setting3', MYFAQ_Gecho('General Settings', false)),                    );                    $admin_menus_string = '';                    $admin_menus_array = array();                    foreach ($admin_menus as $key) {                        $admin_menus_string .= '<li><a href="#" id="' . $key[0] . '">' . MYFAQ_Gecho($key[1], false) . '</a></li>';                        $admin_menus_array[] = array("start_{$key[0]}" => '<div class="G-in-admin-rigths ' . $key[0] . '-div"><h2 class="G-in-admin-rigths-h2">' . MYFAQ_Gecho($key[1], false) . '</h2><hr/>', "end_{$key[0]}" => '</div>');                    }                    echo $admin_menus_string;                    ?>                </ul>            </div>            <div id="G-in-admin-rigth">                <?php                foreach ($admin_menus_array as $key) {                    extract($key);                }                echo $start_Setting3;                ?>                <table class="form-table">                    <tbody>                    <tr valign="top">                        <th scope="row"><label for="g_myfaq-enable"><?php MYFAQ_Gecho('Enable/Disable'); ?></label></th>                        <td>                            <input type="checkbox" class="regular-text" id="g_myfaq-enable" name="g_myfaq-enable"                                   value="1" <?php if (@$MYFAQ_admin_options['g_myfaq-enable'] == 1 OR $MYFAQ_admin_options['g_myfaq-enable'] === NULL) {                                echo 'checked="checked"';                            } ?> />                            <p class="description">                                <?php MYFAQ_Gecho('Check it for enable it'); ?>                            </p>                            </td>                    </tr>                    <tr valign="top">                        <th scope="row"><label for="g_myfaq-enable-captcha"><?php MYFAQ_Gecho('Enable/Disable Captcha'); ?></label></th>                        <td>                            <input type="checkbox" class="regular-text" id="g_myfaq-enable-captcha" name="g_myfaq-enable-captcha"                                   value="1" <?php if (@$MYFAQ_admin_options['g_myfaq-enable-captcha'] == 1 OR $MYFAQ_admin_options['g_myfaq-enable-captcha'] === NULL) {                                echo 'checked="checked"';                            } ?> />                            <p class="description">                                <?php MYFAQ_Gecho('Check it for enable it'); ?>                            </p>                            </td>                    </tr>                    <tr valign="top">                        <th scope="row"><label for="g_faq-per-page"><?php MYFAQ_Gecho('FAQ per page number'); ?></label>                        </th>                        <td>                            <input type="text" id="g_faq-per-page" name="g_faq-per-page"                                   value="<?php echo @$MYFAQ_admin_options['g_faq-per-page']; ?>"/>                            <p class="description">                                <?php MYFAQ_Gecho('How many items can be show in one page.'); ?>                            </p></td>                    </tr>                    </tbody>                </table>                <?php                echo $end_Setting3;?>            </div>        </div>        <div class="clear"></div>        <div class="wrap" id="G-admin-menu-them-btns">            <input type="submit" name="site_options_save" class="button button-primary"                   value="<?php MYFAQ_Gecho('Save'); ?>"/>        </div>    </form>    </div><?php}function myfaq_admin_page_help_fn(){    echo '<div class="wrap">';    echo '<h2>'.MYFAQ_Gecho('How to use in posts/pages' , false).'</h2><hr>';    echo '<p>'.MYFAQ_Gecho('Just use this shortcode anywhere you want to show',false).': <br>[my_faq]</p>';    echo '</div>';}/** * Add Custom columns to posts list *//* Add a column to the edit post list */function add_my_faq_columns($columns){    return array_merge($columns,        array(            'Mobile' => MYFAQ_Gecho('Mobile', false),            'Email' => MYFAQ_Gecho('Email', false),        )    );}add_filter('manage_my_faq_posts_columns', 'add_my_faq_columns');/* add to list */function custom_my_faq_column($column, $post_id){    global $post;    switch ($column) {        case 'Mobile':            echo get_post_meta($post->ID, '_myfaq_mobile', true);            break;        case 'Email':            echo get_post_meta($post->ID, '_myfaq_email', true);            break;    }}add_action('manage_my_faq_posts_custom_column', 'custom_my_faq_column');/* Register the column as sortable */function register_sortable_columns_for_myfaq($columns){    $columns['Mobile'] = MYFAQ_Gecho('Mobile', false);    $columns['Email'] = MYFAQ_Gecho('Email', false);    return $columns;}add_filter('manage_edit-my_faq_sortable_columns', 'register_sortable_columns_for_myfaq');/** * notify actions when post published Email and SMS */function myfaq_notify_faq_publish($post_id){    if (($_POST['post_type'] == 'my_faq') && ($_POST['post_status'] == 'publish') && ($_POST['hidden_post_status'] == 'pending')) {        $post_id;        /* any email exists to send? */        $mail = get_post_meta($post_id, '_myfaq_email', true);        if ($mail) {            $email_subject = MYFAQ_Gecho('Your FAQ Answered On', false) . ' ' . get_bloginfo('name');            /* send Email */            $post = get_post($post_id);            $message = MYFAQ_Gecho('Your FAQ Answered', false) . "\n\r" . get_permalink($post->ID);            wp_mail($mail, $email_subject, $message);        }        /* any mobile exists for SMS? */        $mobile = get_post_meta($post_id, '_myfaq_mobile', true);        if ($mobile) {            $mobile_msg = MYFAQ_Gecho('Your FAQ Answered On', false) . ' ' . get_bloginfo('name');            /* send SMS */            myfaq_send_sms($mob, $mobile_msg);        }    }}add_action('save_post', 'myfaq_notify_faq_publish');/** * send SMS */function myfaq_send_sms($mob, $msg){}/** * add faq number bubble that is pending */add_action('admin_menu', 'add_myfaq_menu_bubble');function add_myfaq_menu_bubble(){    global $menu, $wpdb;    $query = "SELECT COUNT(*) FROM " . $wpdb->posts . " WHERE post_status = 'pending' AND post_type = 'my_faq'";    $post_count = $wpdb->get_var($query);    if ($post_count == 0) {        return;    }    $post_count = '<span class="awaiting-mod count-1"><span class="pending-count">' . $post_count . '</span></span>';    if ($post_count) {        foreach ($menu as $key => $value) {            if ($menu[$key][2] == 'edit.php?post_type=my_faq') {                $menu[$key][0] .= ' ' . $post_count . '';                return;            }        }    }}/* ajax action to submit faq */add_action('wp_ajax_submit_faq', 'myfaq_submit_calbback');add_action('wp_ajax_nopriv_submit_faq', 'myfaq_submit_calbback');function myfaq_submit_calbback(){    global $MYFAQ_admin_options;    /**     * Accept faq form     */    /* first captcha */    $captcha_is_ok = false;    $myfaq_error = '';    $myfaq_success = '';    // if (!$_SESSION) session_start();    if (isset($_POST['captcha']) && $_POST['captcha'] != '' && $MYFAQ_admin_options['g_myfaq-enable-captcha'] == 1) {        if ($_POST['captcha'] == $_SESSION['captcha']['code']) {            $captcha_is_ok = true;            $_SESSION['captcha']['code'] = rand();        }    }    if($MYFAQ_admin_options['g_myfaq-enable-captcha'] != 1){        $captcha_is_ok = true;    }    /* validate email */    if(isset($_POST['email']) && trim($_POST['email']) != ''){        if (!filter_var($_POST['email'], FILTER_VALIDATE_EMAIL)) {                       $myfaq_error .= MYFAQ_Gecho('Email is not valid' , false)."\n";        }    }    if (isset($_POST['title'], $_POST['text']) && trim($_POST['title']) != '' && trim($_POST['text']) != '') {        if ($captcha_is_ok) {            $my_post = array(                'post_title' => wp_strip_all_tags($_POST['title']),                'post_content' => wp_strip_all_tags($_POST['text']),                'post_status' => 'pending',                'post_type' => 'my_faq',            );            if(trim($myfaq_error) == '')                $post_id = wp_insert_post($my_post);            if ($post_id) {                $myfaq_success .= MYFAQ_Gecho('Your question sent successfully .We will answer as soon as possible.tnQ', false)."\n";                /* add faq custom fileds here such as email & mobile... */                if (isset($_POST['email'])) {                    add_post_meta($post_id, '_myfaq_email', esc_sql($_POST['email']), true);                }                if (isset($_POST['mobile'])) {                    add_post_meta($post_id, '_myfaq_mobile', esc_sql($_POST['mobile']), true);                }            } else {                $myfaq_error .= MYFAQ_Gecho('There is a problem,Try Again.', false)."\n";            }        } else {            $myfaq_error .= MYFAQ_Gecho('Captcha is incorrect,Try Again.', false)."\n";        }    }else{        $myfaq_error .= MYFAQ_Gecho('Incorrect request.', false)."\n";    }      if (trim($myfaq_error) != '') {        echo json_encode(array('ok' => 'no', 'msg' => $myfaq_error));        die();    } else {        echo json_encode(array('ok' => 'yes', 'msg' => $myfaq_success));        die();    }}/* ajax renew captcha image */add_action('wp_ajax_reload_captcha_faq', 'myfaq_reload_captcha_callback');add_action('wp_ajax_nopriv_reload_captcha_faq', 'myfaq_reload_captcha_callback');function myfaq_reload_captcha_callback(){    /* require captcha file */    require_once MYFAQ_PHP_DIR . 'simple-php-captcha.php';    // if (!$_SESSION) session_start();    $_SESSION['captcha'] = $sess['captcha'] = simple_php_captcha(array(        'min_length' => 5,        'max_length' => 7,        'backgrounds' => array('white-wave.png'),        'fonts' => array('times_new_yorker.ttf'),        'characters' => 'abcdefghjkmnprstuvwxyz23456789',        'min_font_size' => 15,        'max_font_size' => 15,        'color' => '#bbb',        'angle_min' => 0,        'angle_max' => 10,        'shadow' => true,        'shadow_color' => '#fff',        'shadow_offset_x' => -1,        'shadow_offset_y' => 1    ));      echo json_encode(array('ok' => 'yes' , 'img_src' => $sess['captcha']['image_src']));    die();}add_action( 'wp_head', 'add_myfaq_ajax_url_var');function add_myfaq_ajax_url_var(){    ?>    <script type="text/javascript">var myfaq_ajax_url = '<?php echo admin_url('admin-ajax.php'); ?>';</script>    <?php}/* add button to tiny editor */add_filter('mce_external_plugins', "myfaq_answer_register");add_filter('mce_buttons', 'myfaq_answer_add_button', 0);function myfaq_answer_add_button($buttons){    array_push($buttons, "separator", "tinymce_faq_btn");    return $buttons;} function myfaq_answer_register($plugin_array){    $url= MYFAQ_JS_PATH."tinymce_faq_btn.js";     $plugin_array["tinymce_faq_btn"] = $url;    return $plugin_array;}/*replcae [myfaq_answer] custom code - tinymce*/function myfaq_tinymce_custom_code($content){    return (preg_replace('#(\[myfaq_answer\](.*)\[/myfaq_answer\])#si', '<div class="myfaq-admin-answer">${2}</div>', $content));}add_filter( 'the_content', 'myfaq_tinymce_custom_code' );add_filter( 'the_excerpt', 'myfaq_tinymce_custom_code' );